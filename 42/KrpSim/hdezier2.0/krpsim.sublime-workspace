{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Tf",
				"TFirst"
			],
			[
				"subta",
				"sub_task_res"
			],
			[
				"sub",
				"sub_task	const std::pair<const std::basic_string<char>, const Task *> &"
			],
			[
				"for",
				"forward_as_tuple"
			],
			[
				"taskp",
				"task_path	std::unordered_map<std::basic_string<char>, unsigned long, std::hash<string>, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, unsigned long> > >"
			],
			[
				"subtaspa",
				"sub_task_path	std::unordered_map<std::basic_string<char>, unsigned long, std::hash<string>, std::equal_to<std::basic_string<char> >, std::allocator<std::pair<const std::basic_string<char>, unsigned long> > >"
			],
			[
				"_add",
				"_add_or_accumulate(std::unordered_map<std::string, uint64_t> &dest, const std::string &to_emplace_first, uint64_t to_emplace_second)	bool"
			],
			[
				"getn",
				"get_need(const std::string &resource) const	uint64_t"
			],
			[
				"ge",
				"get_task_path(const std::string &task_name, uint64_t n_coef) const	t_task_pack"
			],
			[
				"msub",
				"m_sub_tasks	t_tasks_link_by_res"
			],
			[
				"res",
				"res_need"
			],
			[
				"_mergeto",
				"_merge_to_map(std::unordered_map<std::string, uint64_t> &dest, const std::string &to_emplace_first, uint64_t to_emplace_second)	bool"
			],
			[
				"empl",
				"emplace(_Args &&__args...)	std::pair<iterator, bool>"
			],
			[
				"s",
				"first	const std::basic_string<char>"
			],
			[
				"resou",
				"resources_init"
			],
			[
				"t_ta",
				"t_tasks_pack_ratio"
			],
			[
				"restom",
				"res_to_max"
			],
			[
				"fi",
				"first"
			],
			[
				"num",
				"numeric_limits	classTemplate"
			],
			[
				"uint",
				"uint64_t"
			],
			[
				"_is",
				"_is_executable(const t_resource_pack &resources_init) const	bool"
			],
			[
				"m_",
				"m_resources	t_resource_pack"
			],
			[
				"sec",
				"second	Task"
			],
			[
				"task",
				"task_ratio"
			],
			[
				"emplace",
				"emplace_hint(const_iterator __p, _Args &&__args...)	iterator"
			],
			[
				"get",
				"get_prod_ratio	(JobShopManager.cpp)"
			],
			[
				"t_taskpa",
				"t_tasks_pack_ratio	(task_type.h)"
			],
			[
				"multi",
				"multimap	classTemplate"
			],
			[
				"OP",
				"OPTIMIZE_NOT_DEFINED	e_err"
			],
			[
				"nl",
				"nlist_64"
			],
			[
				"print_err",
				"print_err(e_err err)	void"
			],
			[
				"printf",
				"printf(const char *, ...)	int"
			],
			[
				"setget",
				"set_get_data	(show_alloc_mem.c)"
			],
			[
				"SI",
				"SIZE_PIECE	(tetris.h)"
			],
			[
				"cons",
				"consecutive_dead_blocks"
			],
			[
				"cehc",
				"check_array"
			],
			[
				"printp",
				"print_pieces(t_result *result)	void"
			],
			[
				"err_",
				"err_msgs"
			],
			[
				"F",
				"FALSE	(tetris.h)"
			],
			[
				"write",
				"write_piece_to_result"
			],
			[
				"add_piece",
				"add_piece_to_result	(Makefile)"
			],
			[
				"tre",
				"t_result	Typedef"
			],
			[
				"a",
				"array	(file_to_pieces.c)"
			],
			[
				"MA",
				"MAX_PIECES"
			],
			[
				"grow",
				"grow_rect_with_piece	(calc_added_rows_cols.c)"
			],
			[
				"X",
				"X_AND_Y	(tetris.h)"
			],
			[
				"gro",
				"grow_rect(t_rect *rect, int new_x, int new_y, enum e_coord coord)	void"
			],
			[
				"copy",
				"copy(t_rect *orig, t_rect *dest)	void"
			],
			[
				"calc",
				"calc_added_rows_cols_point"
			],
			[
				"poi",
				"point_down_right	t_vec2"
			],
			[
				"upda",
				"update_limit_points(t_rect *rect, int new_x, int new_y)	void"
			],
			[
				"new",
				"new_frame"
			],
			[
				"point_d",
				"point_down_right"
			],
			[
				"new_poin",
				"new_point_ul	int [2]"
			],
			[
				"poin",
				"point_up_left	int [2]"
			],
			[
				"point",
				"point_down_right	int [2]"
			],
			[
				"new_",
				"new_x"
			],
			[
				"minpo",
				"min_position	int [2]"
			],
			[
				"INT",
				"INT_MAX"
			],
			[
				"pri",
				"printf	printf â€¦"
			],
			[
				"rea",
				"reader"
			],
			[
				"exit",
				"exit_with_error	(main.c)"
			],
			[
				"re",
				"reader"
			],
			[
				"isva",
				"is_valid_bloc"
			],
			[
				"ope",
				"openLog()	bool"
			],
			[
				"string",
				"std::string::npos"
			],
			[
				"par",
				"parseDirectories	(util.hpp)"
			],
			[
				"cst",
				"c_str() const	const char *"
			],
			[
				"findlast",
				"find_last_of(char __c) const	size_type"
			],
			[
				"touc",
				"touchFile(const std::string &origin, const std::string &dest)	bool"
			],
			[
				"du",
				"duplicateString(const std::string &filename, const std::vector<std::map<std::string, std::string> > &vecMap)	const std::string"
			],
			[
				"parse",
				"parseParents	(util.hpp)"
			],
			[
				"cs",
				"c_str() const	const char *"
			],
			[
				"touch",
				"touchFileVariables	(FtFile.cpp)"
			],
			[
				"touf",
				"touchFileVariables	(FtFile.cpp)"
			],
			[
				"size",
				"size_t	(FtStr.cpp)"
			],
			[
				"ifs",
				"ifstream	Typedef"
			],
			[
				"strin",
				"std::string"
			],
			[
				"pro",
				"project_path"
			],
			[
				"std",
				"std=c++11"
			],
			[
				"ICOM",
				"I_COMMAND_HPP"
			],
			[
				"item",
				"item_name"
			],
			[
				"_me",
				"_menuItems	(Menu.cpp)"
			],
			[
				"paddin",
				"padding-left"
			],
			[
				"padding",
				"padding-left"
			],
			[
				"border",
				"border-right"
			],
			[
				"height",
				"min-height"
			],
			[
				"datas",
				"dateStart"
			],
			[
				"glyp",
				"glyphicon-calendar"
			],
			[
				"inpu",
				"input-group-addon"
			],
			[
				"form",
				"form-control"
			],
			[
				"dateti",
				"datetimepicker6"
			],
			[
				"margin",
				"margin-top"
			],
			[
				"wid",
				"width"
			],
			[
				"max-",
				"max-width"
			],
			[
				"aria",
				"aria-hidden"
			],
			[
				"gl",
				"glyphicon-chevron-right"
			],
			[
				"to",
				"toDOM"
			],
			[
				"inn",
				"innerHTML"
			],
			[
				"app",
				"App"
			],
			[
				"File",
				"FileDir	(FileDir.cpp)"
			],
			[
				"nu",
				"ncurses	(Window.hpp)"
			],
			[
				"colo",
				"color_map	(Obj.frag)"
			],
			[
				"IN",
				"INT_MAX	(Node.hpp)"
			],
			[
				"W",
				"PTS_WIN"
			],
			[
				"BOA",
				"BOARD_WIDTH"
			],
			[
				"vert",
				"vertexUV"
			],
			[
				"fil",
				"filename"
			],
			[
				"read",
				"read_bmp_file"
			],
			[
				"refr",
				"refresh"
			],
			[
				"glEn",
				"glEnable"
			],
			[
				"forw",
				"forward"
			],
			[
				"pr",
				"print_obj"
			],
			[
				"glEna",
				"glEnableVertexAttribArray"
			],
			[
				"rev",
				"revert_mat"
			],
			[
				"mvp",
				"mvp_id"
			],
			[
				"refre",
				"refresh_vp"
			],
			[
				"set",
				"set_eye_view"
			],
			[
				"norm",
				"normal_buffer"
			],
			[
				"VIE",
				"VIEW_ASPECT"
			],
			[
				"VIEWF",
				"VIEW_FAR"
			],
			[
				"vie",
				"view_one"
			],
			[
				"VI",
				"VIEW_RATIO"
			],
			[
				"verbuf",
				"vertex_buffer_data"
			],
			[
				"veb",
				"vertex_buffer_size"
			],
			[
				"un",
				"unsigned"
			],
			[
				"ve_indeb",
				"ve_index_buffer_data"
			],
			[
				"fta",
				"ft_atof"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Task.cpp",
			"settings":
			{
				"buffer_size": 4109,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/JobShopManager.cpp",
			"settings":
			{
				"buffer_size": 3188,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* ************************************************************************** */\n/*                                                                            */\n/*                                                        :::      ::::::::   */\n/*   Task.h                                             :+:      :+:    :+:   */\n/*                                                    +:+ +:+         +:+     */\n/*   By: leeios <leeios@student.42.fr>              +#+  +:+       +#+        */\n/*                                                +#+#+#+#+#+   +#+           */\n/*   Created: 2016/06/10 01:11:21 by leeios            #+#    #+#             */\n/*   Updated: 2016/06/18 17:19:21 by leeios           ###   ########.fr       */\n/*                                                                            */\n/* ************************************************************************** */\n\n#ifndef TASK_H\n# define TASK_H\n\n# include \"krpsim.h\"\n# include \"resource_type.h\"\n# include \"task_type.h\"\n\n# include <iostream>\n\nclass Task\n{\npublic:\n	Task(const t_resource_pack_token &needs\n		, const t_resource_pack_token &products, uint64_t time);\n	~Task(void) = default;\n\n	uint64_t					get_need(const std::string &resource) const;\n	uint64_t					get_product(const std::string &resource) const;\n	t_resource_pack				get_product(uint64_t n) const;\n	t_task_pack					get_task_path(\n								const std::string &task_name\n								, bo n_coef) const;\n\n	void						set_sub_tasks(const t_tasks &all_tasks, const std::string &task_name);\n\n	// DEBUG\n	inline void		print(void) const\n	{\n		std::cerr << \"\\t_Needs_\" << std::endl;\n		for (const auto &n : m_needs)\n			std::cerr << \"\\t\\t\" << n.first << \":\" << (unsigned int)n.second << std::endl;\n		std::cerr << \"\\t_Products_\" << std::endl;\n		for (const auto &n : m_products)\n			std::cerr << \"\\t\\t\" << n.first << \":\" << (unsigned int)n.second << std::endl;\n		std::cerr << \"\\tTime:\" << (unsigned int)m_time << std::endl;\n		std::cerr << \"\\tSubstasks:\" << std::endl;\n		for (const auto &sub_task : m_sub_tasks)\n			std::cerr << \":\" << sub_task.first << std::endl;\n	};\n\nprivate:\n	t_resource_pack		m_needs;\n	t_resource_pack		m_products;\n	uint64_t			m_time;\n	t_tasks_link_by_res	m_sub_tasks;\n	mutable bool		m_lock_investing;\n\n	uint64_t			_n_executable(const t_resource_pack &resources_init) const;\n	uint64_t			_calc_ratio_according_prod(uint64_t current_prod, const t_resource_pack &resources_to_max) const;\n\n	template<typename TFirst, typename TSecond>\n	inline static bool	_add_or_accumulate(std::unordered_map<TFirst, TSecond> &dest\n						, const TFirst &to_emplace_first\n						, TSecond to_emplace_second)\n	{\n		auto	n_current(dest.find(to_emplace_first));\n		if (n_current == dest.end())\n		{\n			dest.emplace(to_emplace_first, to_emplace_second);\n			return (false);\n		}\n		else\n		{\n			n_current->second += to_emplace_second;\n			return (true);\n		}\n	}\n};\n\n#endif\n",
			"file": "include/Task.h",
			"file_size": 2880,
			"file_write_time": 131107367615450912,
			"settings":
			{
				"buffer_size": 2874,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/resource_type.h",
			"settings":
			{
				"buffer_size": 1268,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/resources/pomme",
			"settings":
			{
				"buffer_size": 1102,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/JobShopManager.h",
			"settings":
			{
				"buffer_size": 1840,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/task_type.h",
			"settings":
			{
				"buffer_size": 1410,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "preu",
		"selected_items":
		[
			[
				"preu",
				"Preferences: Settings - User"
			],
			[
				"pack re",
				"Package Control: Remove Package"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"pre u",
				"Preferences: Settings - User"
			],
			[
				"pre",
				"Preferences: Settings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"pack ins",
				"Package Control: Install Package"
			],
			[
				"pack install",
				"Package Control: Install Package"
			],
			[
				"pack remo",
				"Package Control: Remove Package"
			],
			[
				"key us",
				"Preferences: Key Bindings - User"
			],
			[
				"pref us",
				"Preferences: Settings - User"
			],
			[
				"key u",
				"Preferences: Key Bindings - User"
			],
			[
				"pref u",
				"Preferences: Settings - User"
			],
			[
				"linter",
				"SublimeLinter: Disable Linter"
			],
			[
				"pack ",
				"Preferences: Package Control Settings â€“ User"
			],
			[
				"pack list",
				"Package Control: List Packages"
			],
			[
				"pre ",
				"Preferences: Settings - User"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"pack li",
				"Package Control: List Packages"
			],
			[
				"pref",
				"Preferences: Settings - User"
			],
			[
				"prefe",
				"Preferences: Key Bindings - User"
			],
			[
				"clangc",
				"Preferences: ClangComplete Settings â€“ User"
			],
			[
				"",
				"42 : Add a header"
			],
			[
				"clagcomp",
				"Preferences: ClangComplete Settings â€“ User"
			],
			[
				"keybin",
				"Preferences: Key Bindings - User"
			],
			[
				"keyb",
				"Preferences: Key Bindings - Default"
			],
			[
				"keybi",
				"Preferences: Key Bindings - User"
			],
			[
				"prefere",
				"Preferences: Settings - User"
			],
			[
				"pack remove",
				"Package Control: Remove Package"
			],
			[
				"pack l",
				"Package Control: List Packages"
			],
			[
				"pack chann",
				"Package Control: Add Channel"
			],
			[
				"project",
				"Project: Add Folder"
			],
			[
				"prefse",
				"Preferences: Settings - User"
			],
			[
				"pack rem",
				"Package Control: Remove Package"
			],
			[
				"keybn",
				"Preferences: Key Bindings - User"
			],
			[
				"alignment",
				"Preferences: Alignment Key Bindings â€“ Default"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings â€“ User"
			],
			[
				"prefre",
				"Preferences: Settings - User"
			],
			[
				"d def",
				"Preferences: Key Bindings - Default"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"keybind",
				"Preferences: Key Bindings - User"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"sublimelinter",
				"SublimeLinter: Next Error"
			],
			[
				"me",
				"View: Toggle Menu"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"toggl",
				"SublimeLinter: Toggle Linter"
			],
			[
				"tog",
				"SublimeLinter: Toggle Linter"
			],
			[
				"toggle lin",
				"SublimeLinter: Toggle Linter"
			],
			[
				"warn",
				"SublimeLinter: Don't Make Warnings Passive"
			],
			[
				"warnin",
				"SublimeLinter: Make Warnings Passive"
			],
			[
				"gutter",
				"SublimeLinter: Choose Gutter Theme"
			],
			[
				"mark",
				"SublimeLinter: Choose Mark Style"
			],
			[
				"show",
				"SublimeLinter: Show All Errors"
			],
			[
				"mode",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"next",
				"SublimeLinter: Next Error"
			],
			[
				"pack i",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"Snippet: ",
				"Snippet: Cpp-print"
			],
			[
				"pac rem",
				"Package Control: Remove Package"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"pac kin",
				"Package Control: Install Package"
			],
			[
				"parem",
				"Package Control: Remove Package"
			],
			[
				"remopa",
				"Package Control: Remove Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"paki",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pak ins",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0"
	],
	"file_history":
	[
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/util/log.txt",
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/test/debug/loop",
		"/home/leeios/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/include/JobShopManager.h",
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/src/JobShopManager.cpp",
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/include/Interpreter.h",
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/src/Interpreter.cpp",
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/Makefile",
		"/home/leeios/code/meuh/42/KrpSim/hdezier2.0/src/main.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/KrpSim/hdezier2.0/src/Interpreter.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/KrpSim/hdezier2.0/include/krpsim.h",
		"/home/leeios/code/meuh/42/KrpSim/hdezier/krpsim.sublime-project~",
		"/home/leeios/code/meuh/42/KrpSim/hdezier/krpsim.sublime-project",
		"/home/leeios/code/meuh/42/Nm-otool/hdezier/Makefile",
		"/home/leeios/code/meuh/42/Nm-otool/hdezier/include/nm.h",
		"/home/leeios/code/meuh/42/Nm-otool/hdezier/src/sort_nlst.c",
		"/home/leeios/code/meuh/42/Nm-otool/hdezier/nm-otool.sublime-project",
		"/home/leeios/code/meuh/42/Nm-otool/hdezier/src/main.c",
		"/home/leeios/code/meuh/42/Nm-otool/hdezier/src/get_char_type.c",
		"/home/leeios/code/meuh/42/Nm-otool/hdezier/src/nm.c",
		"/home/leeios/code/meuh/42/Abstract VM/hdezier2.0/Makefile",
		"/usr/include/mach-o/stab.h",
		"/usr/include/mach-o/nlist.h",
		"/Volumes/Storage/cache/library.hdezier/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/usr/include/mach-o/loader.h",
		"/nfs/2013/h/hdezier/code/meuh/42/Nm-otool/hdezier/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/server/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/src/ft_malloc.c",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/include/ft_malloc.h",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/src/ft_realloc.c",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/src/show_alloc_mem.c",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/main.c",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/main.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/malloc/hdezier/src/ft_free.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/src/fill_result_in_size.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/src/calculus_dead_blocks.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/src/error.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/src/file_to_pieces.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/src/print_pieces.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/src/resolve.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/src/main.c",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/test/test_00.p",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/include/tetris.h",
		"/nfs/2013/h/hdezier/code/meuh/sandbox/hdezier/tetris/tetris.sublime-project",
		"/home/leeios/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/grow_rect_with_piece.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/print_pieces.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/add_piece_to_result.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/lib_rect.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/error.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/test/log.txt",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/test/test_00.p",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/Makefile",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/link_pieces.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/tetris.sublime-project",
		"/home/leeios/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/error.cpp",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/main.c",
		"/home/leeios/.config/sublime-text-3/Packages/Clang-Complete/cc.sublime-settings",
		"/home/leeios/code/rool/src/screens/Project.cpp",
		"/home/leeios/code/rool/include/Project.hpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/src/main.cpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/config/programs.conf",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/include/IModule.hpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/include/Master.hpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/src/Process.cpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/src/modules/MLog.cpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/include/MLog.hpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/src/Master.cpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/src/Log.cpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/src/UI/AWindow.cpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/taskmaster.sublime-project",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/include/Process.hpp",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/Makefile",
		"/home/leeios/code/meuh/42/Taskmaster/hdezier-rbernand/include/Log.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/config/models/Makefile.model",
		"/home/leeios/code/meuh/util/roolv2.0/Makefile",
		"/home/leeios/code/meuh/util/roolv2.0/rool.sublime-project",
		"/home/leeios/code/meuh/util/roolv2.0/include/MemberMod.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/include/ClassMod.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/include/IModule.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/mods/ClassMod.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/mods/MemberMod.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/utils/FtStr.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/utils/FtFile.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/include/config.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/commands/InterfaceCmd.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/commands/StandardCmd.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/config/models/main.model",
		"/home/leeios/code/meuh/util/roolv2.0/config/models/interface.model",
		"/home/leeios/code/meuh/util/roolv2.0/include/util.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/include/InterfaceCmd.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/config/models/inc.model",
		"/home/leeios/code/meuh/util/roolv2.0/src/screens/Project.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/screens/Boot.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/config/proj_tree/classic.tree",
		"/home/leeios/code/meuh/util/roolv2.0/config/.proj",
		"/home/leeios/code/meuh/util/roolv2.0/include/StandardCmd.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/config/models/inc_parents.model",
		"/home/leeios/code/meuh/util/roolv2.0/config/models/inherit_parents.model",
		"/home/leeios/code/meuh/util/roolv2.0/include/ICommand.hpp",
		"/home/leeios/.config/sublime-text-3/Packages/User/SublimeLinter.sublime-settings",
		"/home/leeios/code/meuh/util/roolv2.0/src/main.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/ncurse/Window.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/ncurse/Menu.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/src/utils/FileDir.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/rool.sublime-workspace",
		"/home/leeios/code/meuh/util/roolv2.0/roolv2.0.sublime-project",
		"/home/leeios/.config/sublime-text-3/Packages/User/ClangComplete.sublime-settings",
		"/home/leeios/.config/sublime-text-3/Packages/ClangComplete/ClangComplete.sublime-settings",
		"/home/leeios/code/meuh/util/roolv2.0/CMakeLists.txt",
		"/home/leeios/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/leeios/code/meuh/util/roolv2.0/util/Makefile",
		"/home/leeios/code/meuh/util/roolv2.0/CMakeLists",
		"/usr/include/c++/4.8/bits/basic_string.h",
		"/home/leeios/code/Wektiv/public/js/app.js",
		"/home/leeios/code/meuh/util/Rool/lib/fileManip/src/fileManip.cpp",
		"/home/leeios/code/meuh/util/roolv2.0/inc/Menu.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/inc/ICommand.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/inc/ClassMod.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/config/models/src.model",
		"/home/leeios/code/meuh/util/roolv2.0/inc/StandardCmd.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/inc/util.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/inc/FileDir.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/inc/IModule.hpp",
		"/home/leeios/code/meuh/util/roolv2.0/inc/Project.hpp"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
			"<open folders>, *.c, *.h, *.cpp",
			"<open folders>, *.c, *.h",
			"/home/leeios/code/meuh/sandbox/hdezier/tetris",
			"/home/leeios/code/meuh/util/roolv2.0",
			"/home/leeios/code/meuh/util/Rool/src,/home/leeios/code/meuh/util/Rool/include",
			"/home/leeios/code/meuh/sandbox/util/Rool",
			"/home/leeios/code/meuh/42/Scop/hdezier/src",
			"/home/leeios/code/meuh/42/scop/hdezier/src",
			"/home/leeios/code/meuh/42/scop/hdezier",
			"/home/leeios/code/meuh/util/project_ruler/test",
			"/home/leeios/taf/Moods/moods/public/js/libs/moods",
			"/home/leeios/taf/whibo-dev/app/",
			"/home/leeios/taf/whibo-dev/app/controllers",
			"/home/leeios/taf/whibo-dev/app/assets/javascripts/zen/app/docViewer/review",
			"/home/leeios/taf/Review/js/libs/etherpad-lite/node_modules/ep_etherpad-lite",
			"/home/leeios/taf/Review/js/libs/etherpad-lite/src",
			"/home/leeios/taf/Review/js/libs/etherpad-lite/SRC",
			"/home/leeios/taf/Review/js/libs/etherpad-lite",
			"/home/leeios/taf/Review",
			"/home/leeios/taf/tmp_taf/public/js/libs/feedy",
			"/home/leeios/taf/tmp_taf/",
			"/home/leeios/taf/tmp_taf/public/js/libs/feedy",
			"/home/leeios/taf/tmp_taf/public/js/libs/comApp",
			"/home/leeios/taf/tmp_taf/model",
			"/home/leeios/taf/tmp_taf/public/js/libs/comApp",
			"/home/leeios/taf/tmp_taf/public/js/libs/appComments",
			"/home/leeios/taf/tmp_taf/public/js/libs/appcomments",
			"/home/leeios/taf/tmp_taf/public/js/libs/appcoments",
			"/home/leeios/taf/tmp_taf/public/js/libs",
			"/home/leeios/code/C/grimly/include,/home/leeios/code/C/grimly/src,/home/leeios/code/C/grimly/test"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"uint64_t",
			"double",
			"std::string",
			"uint64_t",
			"				 Path	do_tarte_pomme\nLOOP\n					 Search 30	euro\n				 Path	vente_tarte_citron\nLOOP\n				 Path	vente_boite\nLOOP\n				 Path	vente_tarte_pomme\nLOOP\n				 Path	vente_flan\nLOOP\n					 Search 1	flan\n				 Path	do_flan\nLOOP\n				 Path	vente_tarte_pomme\nLOOP\n				 Path	vente_flan\nLOOP\n					 Search 1	four\n				 Path	do_tarte_citron\nLOOP\n				 Path	do_flan\nLOOP\n				 Path	vente_flan\nLOOP\n					 Search 50	citron\n				 Path	buy_citron\n					 Search 100	euro\n				 Path	vente_tarte_citron\nLOOP\n				 Path	vente_boite\n					 Search 100	boite\n				 Path	do_boite\n					 Search 3	tarte_citron\n				 Path	do_tarte_citron\nLOOP\n",
			"vente_flan",
			"b",
			"a",
			"n_sub_coef",
			"_merge_to_map",
			"t_tasks_link_res",
			"result",
			"Second",
			"First",
			"t_tasks_pack",
			"_n_executable",
			"result",
			"std::get<1>",
			"std::get<0>",
			"std::get<1>",
			"std::get<0>",
			"pair",
			"tuple",
			"make_tuple",
			"tuple",
			"std",
			"result",
			"compare",
			"resource",
			"elem->n_type",
			"ft_putstr",
			"ft_putstr_endl",
			"printf",
			"n_desc",
			"include",
			">type",
			"type",
			"if",
			"print_output",
			"define",
			"e_err",
			"super+y",
			"ERR_ARCHITECTURE_NOT_FOUND",
			",",
			"write ",
			"write",
			"size_t",
			"show_alloc_mem",
			"ft_malloc",
			"void",
			"$\n",
			"int",
			"//",
			"malloc",
			", n + 1",
			"init_check_array",
			"check_data",
			"check_array",
			"fit_size",
			"consecutive_bloc",
			"SIZE_PIECE",
			"fit_size",
			"SIZE_PIECE",
			"err_msgs",
			"x",
			"height",
			"width",
			"j",
			"i",
			"&frame",
			"base_position.x",
			"y",
			"x",
			"(y)",
			"(x)",
			"y + j",
			"new_frame",
			"&new_frame",
			"x + i",
			"update_limit_points",
			"enum e_error",
			"e_error",
			"int",
			"e_coord",
			"i",
			"x",
			"min_position.",
			"[1]",
			"[0]",
			"result->point_down_right",
			"result->point_up_left",
			"new_height",
			"width",
			"new_width",
			"orig",
			"point_up_left",
			"x",
			"result",
			"result->point_down_right",
			"result->point_up_left[0]",
			"{",
			"new_point_ul",
			"0",
			"result->point_down_right[1] - result->point_up_left[1]",
			"result->point_down_right[0] - result->point_up_left[0]",
			"$",
			"x + i",
			"min_position[1] + j",
			"min_position[0] + i",
			"i",
			"0",
			"x + i",
			"poin",
			"calc_dist_from_center",
			"a",
			".#",
			"MAX_PIECES",
			"MAX_PIECES * SIZE_PIECE / 2",
			"vals",
			"s_peice",
			"s_list",
			"4",
			"i * 5 + j",
			"4",
			"reader",
			"waitpi",
			"cmdName",
			"O_WRONLY"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"_add_or_accumulate",
			"t_tasks_link_by_res",
			"pair",
			"t_err",
			"t_error",
			"nullptr",
			"userInput",
			"scop",
			"suggestComment",
			"preValid",
			"addComment",
			"id",
			"r.Seed.",
			"ViewFile",
			"grimly"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Task.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4109,
						"regions":
						{
						},
						"selection":
						[
							[
								2543,
								2543
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1092.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/JobShopManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3188,
						"regions":
						{
						},
						"selection":
						[
							[
								2904,
								2904
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 760.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "include/Task.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2874,
						"regions":
						{
						},
						"selection":
						[
							[
								1921,
								1921
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 405.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "include/resource_type.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1268,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
								],
								"scope": "string"
							}
						},
						"selection":
						[
							[
								1126,
								1126
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 70.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "test/resources/pomme",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1102,
						"regions":
						{
						},
						"selection":
						[
							[
								1025,
								1025
							]
						],
						"settings":
						{
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 129.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "include/JobShopManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1840,
						"regions":
						{
						},
						"selection":
						[
							[
								1840,
								1840
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 534.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "include/task_type.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1410,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "Packages/BetterBookmarks/icons/function.png",
								"regions":
								[
								],
								"scope": "comment"
							}
						},
						"selection":
						[
							[
								1387,
								1387
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 128.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "include/Task.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2874,
						"regions":
						{
						},
						"selection":
						[
							[
								1378,
								1378
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"glsv_configured": true,
							"glsv_enabled": 1,
							"glsv_spec": 0,
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 210.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 63.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.cc":
	{
		"height": 128.0
	},
	"output.clipboard_manager":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "krpsim.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"lo",
				"util/log.txt"
			],
			[
				"log",
				"util/log.txt"
			],
			[
				"pom",
				"test/resources/pomme"
			],
			[
				"job",
				"src/JobShopManager.cpp"
			],
			[
				"josh",
				"include/JobShopManager.h"
			],
			[
				"jobsh",
				"src/JobShopManager.cpp"
			],
			[
				"task",
				"include/Task.h"
			],
			[
				"inteph",
				"include/Interpreter.h"
			],
			[
				"inte",
				"src/Interpreter.cpp"
			],
			[
				"inter",
				"src/Interpreter.cpp"
			],
			[
				"takcp",
				"src/Task.cpp"
			],
			[
				"jobshh",
				"include/JobShopManager.h"
			],
			[
				"type",
				"include/resource_type.h"
			],
			[
				"jobs",
				"src/JobShopManager.cpp"
			],
			[
				"kr",
				"include/krpsim.h"
			],
			[
				"ma",
				"src/main.cpp"
			],
			[
				"mk",
				"Makefile"
			],
			[
				"make",
				"Makefile"
			],
			[
				"",
				"src/sort_nlst.c"
			],
			[
				"getch",
				"src/get_char_type.c"
			],
			[
				"mai",
				"src/main.c"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"nm.c",
				"src/nm.c"
			],
			[
				"nm",
				"include/nm.h"
			],
			[
				"main",
				"src/main.c"
			],
			[
				"show",
				"src/show_alloc_mem.c"
			],
			[
				"te",
				"test/test_00.p"
			],
			[
				"err",
				"src/error.c"
			],
			[
				"calc",
				"src/calculus_dead_blocks.c"
			],
			[
				"fill",
				"src/fill_result_in_size.c"
			],
			[
				"file",
				"src/file_to_pieces.c"
			],
			[
				"pri",
				"src/print_pieces.c"
			],
			[
				"res",
				"src/resolve.c"
			],
			[
				"dead",
				"src/calculus_dead_blocks.c"
			],
			[
				"rec",
				"src/lib_rect.c"
			],
			[
				".p",
				"test/test_00.p"
			],
			[
				"libr",
				"src/lib_rect.c"
			],
			[
				"logt",
				"test/log.txt"
			],
			[
				"test",
				"test/test_00.p"
			],
			[
				"add",
				"src/add_piece_to_result.c"
			],
			[
				"link",
				"src/link_pieces.c"
			],
			[
				"prin",
				"src/print_pieces.c"
			],
			[
				"makef",
				"Makefile"
			],
			[
				"error",
				"src/error.cpp"
			],
			[
				"file_",
				"src/file_to_pieces.c"
			],
			[
				"tetris/main.c",
				"meuh/sandbox/hdezier/tetris/src/main.c"
			],
			[
				"pro",
				"rool/include/Project.hpp"
			],
			[
				"projec",
				"rool/src/screens/Project.cpp"
			],
			[
				"mas",
				"include/Master.hpp"
			],
			[
				"mlogc",
				"src/modules/MLog.cpp"
			],
			[
				"mlogh",
				"include/MLog.hpp"
			],
			[
				"co",
				"config/programs.conf"
			],
			[
				"proc",
				"include/Process.hpp"
			],
			[
				"fstr",
				"src/utils/FtStr.cpp"
			],
			[
				"strf",
				"src/utils/FtFile.cpp"
			],
			[
				"cmd",
				"src/commands/InterfaceCmd.cpp"
			],
			[
				"clasm",
				"include/ClassMod.hpp"
			],
			[
				"mem",
				"src/mods/MemberMod.cpp"
			],
			[
				"mod",
				"src/mods/ClassMod.cpp"
			],
			[
				"ftst",
				"src/utils/FtStr.cpp"
			],
			[
				"stan",
				"src/commands/StandardCmd.cpp"
			],
			[
				"util",
				"include/util.hpp"
			],
			[
				"uti",
				"include/util.hpp"
			],
			[
				"classmod",
				"meuh/util/roolv2.0/inc/ClassMod.hpp"
			],
			[
				"projecth",
				"meuh/util/roolv2.0/inc/Project.hpp"
			],
			[
				"projectc",
				"meuh/util/roolv2.0/src/Project.cpp"
			],
			[
				"window",
				"meuh/util/roolv2.0/inc/Window.hpp"
			],
			[
				"menuh",
				"meuh/util/roolv2.0/inc/Menu.hpp"
			],
			[
				".proj",
				"meuh/util/roolv2.0/config/.proj"
			],
			[
				"boot",
				"meuh/util/Rool/src/menus/Boot.cpp"
			],
			[
				"filedi",
				"meuh/util/roolv2.0/inc/FileDir.hpp"
			],
			[
				"rool2make",
				"meuh/util/roolv2.0/Makefile"
			],
			[
				"taskmastercon",
				"meuh/42/Taskmaster/hdezier-rbernand/config/programs.conf"
			],
			[
				"taskconfig",
				"tools/VSCode-linux-x64/resources/app/client/vs/workbench/contrib/files/media/AddFolder_inverse.svg"
			],
			[
				"master",
				"meuh/42/Taskmaster/hdezier-rbernand/src/Master.cpp"
			],
			[
				"bootcp",
				"meuh/util/roolv2.0/src/menus/Boot.cpp"
			],
			[
				"cppjson",
				"meuh/util/roolv2.0/config/cpp-rool.json"
			],
			[
				"classic",
				"meuh/util/roolv2.0/config/proj_tree/classic.tree"
			],
			[
				"rool2.0",
				"meuh/util/roolv2.0/src/menus/Boot.cpp"
			],
			[
				"filed",
				"meuh/util/roolv2.0/inc/FileDir.hpp"
			],
			[
				"filesc",
				"Txt-index/src/FileScanner.cpp"
			],
			[
				"trie",
				"Txt-index/src/Trie.cpp"
			],
			[
				"menucp",
				"meuh/util/roolv2.0/src/Menu.cpp"
			],
			[
				"b",
				"local/cpp/cpp-event/obj/Bridge.d"
			],
			[
				"gui",
				"rool/src/GUI.cpp"
			],
			[
				"roolmain",
				"meuh/util/Rool/src/main.cpp"
			],
			[
				"booth",
				"meuh/util/roolv2.0/inc/Boot.hpp"
			],
			[
				"sortic",
				"rool/src/SortItems.cpp"
			],
			[
				"sorti",
				"rool/include/SortItems.hpp"
			],
			[
				"menhp",
				"meuh/util/roolv2.0/inc/Menu.hpp"
			],
			[
				"v2.0makefile",
				"meuh/util/roolv2.0/Makefile"
			],
			[
				"winhp",
				"meuh/util/roolv2.0/inc/Window.hpp"
			],
			[
				"win",
				"meuh/util/roolv2.0/src/Window.cpp"
			],
			[
				"windo",
				"meuh/util/roolv2.0/src/Window.cpp"
			],
			[
				"roolv2.0",
				"meuh/util/roolv2.0/src/Menu.cpp"
			],
			[
				"gomoku/m",
				"meuh/42/Gomoku/hdezier-erobert/Makefile"
			],
			[
				"ver",
				"public/js/libs/comApp/VersionPicker.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/code/meuh/util/roolv2.0/rool.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 245.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
