{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"setc",
				"setCell(const common::vec2 &origin, common::eDirection dir, uint8_t dist, const common::eCell &player)	void"
			],
			[
				"uint",
				"uint16_t	(GameManager.cpp)"
			],
			[
				"ui",
				"uint16_t	Typedef"
			],
			[
				"ER",
				"ERR_VAL	(GameManager.cpp)"
			],
			[
				"_alignf",
				"_alignFive(const IBoard &board, const common::vec2 &stroke)	bool"
			],
			[
				"sMinm",
				"sMinMaxResult"
			],
			[
				"sminm",
				"sMinMaxResult	(Player.h)"
			],
			[
				"max",
				"maximizing"
			],
			[
				"app",
				"applyCapture(IBoard &board, const common::vec2 &stroke)	uint8_t"
			],
			[
				"cur",
				"currentPlayer	const common::eCell"
			],
			[
				"getCe",
				"getCell(const common::vec2 &coord) const	common::eCell"
			],
			[
				"memc",
				"memcpy(void *, const void *, size_t)	void *"
			],
			[
				"m_",
				"m_ai	(Player.h)"
			],
			[
				"ne",
				"nextCount"
			],
			[
				"_convert",
				"_convertCell(const common::vec2 &origin, common::eDirection dir, uint8_t dist) const	common::vec2 &&"
			],
			[
				"_counal",
				"_countAlignSide(const common::vec2 &stroke, common::eDirection dir, common::eCell player, bool &permissive) const	int8_t"
			],
			[
				"P",
				"P1	common::eCell"
			],
			[
				"mcap",
				"m_capturedStone_P1"
			],
			[
				"_conv",
				"_convertCell(const common::vec2 &origin, common::eDirection dir, uint8_t dist) const	common::vec2"
			],
			[
				"int",
				"int8_t	Typedef"
			],
			[
				"counal",
				"countAlignSide(const common::vec2 &stroke, common::eDirection dir, common::eCell player, int &permissive) const	uint8_t"
			],
			[
				"getc",
				"getCell(const common::vec2 &coord) const	common::eCell"
			],
			[
				"como",
				"common::	namespace"
			],
			[
				"isval",
				"isValid(const common::vec2 &stroke)	bool"
			],
			[
				"uni",
				"uint8_t	(GameManager.cpp)"
			],
			[
				"p",
				"P1	common::eCell"
			],
			[
				"uin",
				"uint8_t"
			],
			[
				"commo",
				"common::	namespace"
			],
			[
				"win",
				"winner"
			],
			[
				"com",
				"common::	namespace"
			],
			[
				"m_pl",
				"m_player_1	(GameManager.h)"
			],
			[
				"RU",
				"RULES_H"
			],
			[
				"ftpu",
				"ft_putstr_fd	(send_files.c)"
			],
			[
				"final",
				"final-notif"
			],
			[
				"annim",
				"annImg-container"
			],
			[
				"clas",
				"classimg"
			],
			[
				"valid",
				"validable-img2"
			],
			[
				"vali",
				"validable-img"
			],
			[
				"backgoun",
				"background-color"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"min",
				"min-width"
			],
			[
				"textl",
				"text-align"
			],
			[
				"clie",
				"clients_data"
			],
			[
				"ft_strc",
				"ft_strcpy(char *s1, const char *s2)	char *"
			],
			[
				"ftmem",
				"ft_memdel	(libft.h)"
			],
			[
				"ret",
				"ret_free"
			],
			[
				"ft_str",
				"ft_strncmp	(libft.h)"
			],
			[
				"listen",
				"listen_port	(server.c)"
			],
			[
				"write",
				"write_socket"
			],
			[
				"create",
				"create_client(int port)	int"
			],
			[
				"socka",
				"sockaddr_in"
			],
			[
				"read",
				"read(int, void *, size_t)	ssize_t"
			],
			[
				"cre",
				"create_server(int port)	int"
			],
			[
				"INADD",
				"INADDR_ANY	Macro"
			],
			[
				"sin",
				"sin_family	sa_family_t"
			],
			[
				"SOCK",
				"SOCK_STREAM	Macro"
			],
			[
				"_eval",
				"_evalRight"
			],
			[
				"ini",
				"initValues	const state_ctr &"
			],
			[
				"getvl",
				"getValNegative"
			],
			[
				"getv",
				"getValNegative"
			],
			[
				"initv",
				"initVals"
			],
			[
				"_set",
				"_setOr"
			],
			[
				"exp",
				"expr"
			],
			[
				"_ini",
				"_initialSetValues()	void"
			],
			[
				"expr",
				"expressions"
			],
			[
				"err",
				"err::	namespace"
			],
			[
				"rest",
				"restart_calc"
			],
			[
				"_calc",
				"_calcTest"
			],
			[
				"FAL",
				"FALSE_TEST	eValue"
			],
			[
				"test",
				"testCtr"
			],
			[
				"rule",
				"ruleEvaluation"
			],
			[
				"mleft",
				"m_leftNegative"
			],
			[
				"T",
				"TRUE"
			],
			[
				"get",
				"getName(eValue val)	const std::string"
			],
			[
				"init",
				"initStates"
			],
			[
				"left",
				"leftVal"
			],
			[
				"mright",
				"m_rightOp	T"
			],
			[
				"state",
				"state_ctr"
			],
			[
				"e",
				"eOperator"
			],
			[
				"TRUE",
				"TRUE_TEST"
			],
			[
				"mrig",
				"m_rightOp"
			],
			[
				"value",
				"valuesRequired"
			],
			[
				"right",
				"rightVal"
			],
			[
				"lef",
				"leftVal"
			],
			[
				"values",
				"valuesRequired	(Expr.hpp)"
			],
			[
				"valu",
				"valuesRequired"
			],
			[
				"f",
				"first"
			],
			[
				"val",
				"valuesRequired"
			],
			[
				"tru",
				"TRUE	eValue"
			],
			[
				"prin",
				"printEValue"
			],
			[
				"FA",
				"FALSE	eValue"
			],
			[
				"set",
				"setOperator(const std::string &op)	void"
			],
			[
				"sta",
				"state_ctr"
			],
			[
				"eV",
				"eValue"
			],
			[
				"stat",
				"state_ctr	(Expr.hpp)"
			],
			[
				"m_rig",
				"m_rightOp"
			],
			[
				"m_le",
				"m_leftOp"
			],
			[
				"isal",
				"isalpha(int)	int"
			],
			[
				"E",
				"ERR_HPP"
			],
			[
				"Token",
				"TokenDef"
			],
			[
				"Tokend",
				"TokensDefinition"
			],
			[
				"TOKE",
				"TOKEN_STRUCT_WORDS"
			],
			[
				"_is",
				"_isOperatorSymbol	(TOperator.hpp)"
			],
			[
				"symbo",
				"symbolIm"
			],
			[
				"find",
				"find_first_of(char __c) const	size_type"
			],
			[
				"size",
				"sizeToCompare"
			],
			[
				"Toper",
				"TOperand"
			],
			[
				"TOpera",
				"TOperand	(TOperand.cpp)"
			],
			[
				"to",
				"to_string(long double __val)	string"
			],
			[
				"else",
				"else if (condition) {\nstatements\n}	KeyWord"
			],
			[
				"mall",
				"m_allTokens	const IToken *[2]"
			],
			[
				"back",
				"back() const	const_reference"
			],
			[
				"tok",
				"tok_indexes	Typedef"
			],
			[
				"curr",
				"currentToken"
			],
			[
				"N",
				"N_TOKEN_TYPE	(Parser.hpp)"
			],
			[
				"Toke",
				"TokenCreator"
			],
			[
				"stream",
				"istringstream	Typedef"
			],
			[
				"errms",
				"err_msgs_data"
			],
			[
				"SI",
				"SIZE_PIECE	(tetris.h)"
			],
			[
				"cons",
				"consecutive_dead_blocks"
			],
			[
				"cehc",
				"check_array"
			],
			[
				"printp",
				"print_pieces(t_result *result)	void"
			],
			[
				"err_",
				"err_msgs"
			],
			[
				"F",
				"FALSE	(tetris.h)"
			],
			[
				"add_piece",
				"add_piece_to_result	(Makefile)"
			],
			[
				"tre",
				"t_result	Typedef"
			],
			[
				"a",
				"array	(file_to_pieces.c)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 2896,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/GameManager.cpp",
			"settings":
			{
				"buffer_size": 4044,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Player.cpp",
			"settings":
			{
				"buffer_size": 4069,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Rules.cpp",
			"settings":
			{
				"buffer_size": 3525,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Player.h",
			"settings":
			{
				"buffer_size": 1916,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Board.h",
			"settings":
			{
				"buffer_size": 6076,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/Rules.h",
			"settings":
			{
				"buffer_size": 2013,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/common.h",
			"settings":
			{
				"buffer_size": 1907,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/GameManager.h",
			"settings":
			{
				"buffer_size": 1523,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/gomoku.h",
			"settings":
			{
				"buffer_size": 935,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.cpp",
			"settings":
			{
				"buffer_size": 1647,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "1/2\n1/10\n8/6\n12/7",
			"settings":
			{
				"buffer_size": 17,
				"line_ending": "Unix",
				"name": "1/2"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "pref",
		"selected_items":
		[
			[
				"pref",
				"Preferences: Settings - User"
			],
			[
				"lore",
				"LoremIpsum: (30) lots"
			],
			[
				"lorep",
				"LoremIpsum: (15) some"
			],
			[
				"lorem",
				"LoremIpsum: (30) lots"
			],
			[
				"key us",
				"Preferences: Key Bindings - User"
			],
			[
				"key de",
				"Preferences: Key Bindings - Default"
			],
			[
				"keyus",
				"Preferences: Key Bindings - User"
			],
			[
				"key u",
				"Preferences: Key Bindings - User"
			],
			[
				"pref u",
				"Preferences: Settings - User"
			],
			[
				"pack rem",
				"Package Control: Remove Package"
			],
			[
				"linter",
				"SublimeLinter: Disable Linter"
			],
			[
				"pack remo",
				"Package Control: Remove Package"
			],
			[
				"pack in",
				"Package Control: Install Package"
			],
			[
				"defaut ",
				"Preferences: Key Bindings - Default"
			],
			[
				"defua",
				"Preferences: Key Bindings - Default"
			],
			[
				"key ",
				"Preferences: Key Bindings - User"
			],
			[
				"lin",
				"SublimeLinter: Toggle Linter"
			],
			[
				"sho",
				"SublimeLinter: Show Errors on Save"
			],
			[
				"mode",
				"SublimeLinter: Choose Lint Mode"
			],
			[
				"lint",
				"SublimeLinter: Toggle Linter"
			],
			[
				"pack li",
				"Package Control: List Packages"
			],
			[
				"pack ins",
				"Package Control: Install Package"
			],
			[
				"clang",
				"Set Syntax: ClangErrorPanel"
			],
			[
				"pack",
				"Preferences: Package Control Settings â€“ Default"
			],
			[
				"key def",
				"Preferences: Key Bindings - Default"
			],
			[
				"pref us",
				"Preferences: Settings - User"
			],
			[
				"pack install",
				"Package Control: Install Package"
			],
			[
				"pack ",
				"Preferences: Package Control Settings â€“ User"
			],
			[
				"pack list",
				"Package Control: List Packages"
			],
			[
				"pre ",
				"Preferences: Settings - User"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"prefe",
				"Preferences: Key Bindings - User"
			],
			[
				"clangc",
				"Preferences: ClangComplete Settings â€“ User"
			],
			[
				"",
				"42 : Add a header"
			],
			[
				"clagcomp",
				"Preferences: ClangComplete Settings â€“ User"
			],
			[
				"keybin",
				"Preferences: Key Bindings - User"
			],
			[
				"keyb",
				"Preferences: Key Bindings - Default"
			],
			[
				"keybi",
				"Preferences: Key Bindings - User"
			],
			[
				"prefere",
				"Preferences: Settings - User"
			],
			[
				"pack remove",
				"Package Control: Remove Package"
			],
			[
				"pack l",
				"Package Control: List Packages"
			],
			[
				"pack chann",
				"Package Control: Add Channel"
			],
			[
				"project",
				"Project: Add Folder"
			],
			[
				"prefse",
				"Preferences: Settings - User"
			],
			[
				"keybn",
				"Preferences: Key Bindings - User"
			],
			[
				"alignment",
				"Preferences: Alignment Key Bindings â€“ Default"
			],
			[
				"align",
				"Preferences: Alignment Key Bindings â€“ User"
			],
			[
				"prefre",
				"Preferences: Settings - User"
			],
			[
				"d def",
				"Preferences: Key Bindings - Default"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"keybind",
				"Preferences: Key Bindings - User"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"sublimelinter",
				"SublimeLinter: Next Error"
			],
			[
				"me",
				"View: Toggle Menu"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"toggl",
				"SublimeLinter: Toggle Linter"
			],
			[
				"tog",
				"SublimeLinter: Toggle Linter"
			],
			[
				"toggle lin",
				"SublimeLinter: Toggle Linter"
			],
			[
				"warn",
				"SublimeLinter: Don't Make Warnings Passive"
			],
			[
				"warnin",
				"SublimeLinter: Make Warnings Passive"
			],
			[
				"gutter",
				"SublimeLinter: Choose Gutter Theme"
			],
			[
				"mark",
				"SublimeLinter: Choose Mark Style"
			],
			[
				"show",
				"SublimeLinter: Show All Errors"
			],
			[
				"next",
				"SublimeLinter: Next Error"
			],
			[
				"pack i",
				"Package Control: Install Package"
			],
			[
				"Snippet: ",
				"Snippet: Cpp-print"
			],
			[
				"pac rem",
				"Package Control: Remove Package"
			],
			[
				"remove pack",
				"Package Control: Remove Package"
			],
			[
				"list pack",
				"Package Control: List Packages"
			],
			[
				"pac kin",
				"Package Control: Install Package"
			],
			[
				"parem",
				"Package Control: Remove Package"
			],
			[
				"remopa",
				"Package Control: Remove Package"
			],
			[
				"packa",
				"Package Control: Remove Package"
			],
			[
				"paki",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pak ins",
				"Package Control: Install Package"
			]
		],
		"width": 503.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src"
	],
	"file_history":
	[
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include/AINode.h",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/Player.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/UserInterface.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/Rules.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include/Rules.h",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/Board.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include/Board.h",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/GameManager.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/util/test.map",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/AINode.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include/common.h",
		"/Volumes/Storage/cache/library.hdezier/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/util/test.input",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/main.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/gomoku.sublime-project",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include/Player.h",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include/gomoku.h",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/include/GameManager.h",
		"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src/AudioManager.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client/log.txt",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client/test.c",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client/auteur",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client/libft/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client/libft/src/send_files.c",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client/src/send_file.c",
		"/nfs/2013/h/hdezier/code/Misc/digihr/sending.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/search.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/css/index.css",
		"/nfs/2013/h/hdezier/code/Misc/digihr/js/lib/sketch.min.js",
		"/nfs/2013/h/hdezier/code/Misc/digihr/user.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/save.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/main.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/feedback.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/contact.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/notifications.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/base.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/index.html",
		"/nfs/2013/h/hdezier/code/Misc/digihr/js/lib/MultiScreen.js",
		"/nfs/2013/h/hdezier/code/Misc/digihr/css/font-awesome.min.css",
		"/nfs/2013/h/hdezier/code/Misc/digihr/js/MultiScreen.js",
		"/usr/include/sys/_types/_pid_t.h",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/server/libft/src/ft_atoi.c",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/server/libft/include/libft.h",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/server/libft/Makefile",
		"/nfs/2013/h/hdezier/code/correction/gb/src/Rule.cpp",
		"/nfs/2013/h/hdezier/code/correction/gb/test/test0.rl",
		"/nfs/2013/h/hdezier/code/correction/hdezier/test/tst.rl",
		"/nfs/2013/h/hdezier/code/correction/hdezier/include/Expr.hpp",
		"/Volumes/Storage/cache/library.hdezier/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/nfs/2013/h/hdezier/code/correction/correc/test/test0.rl",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/libft/src/ft_free_array_str.c",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/libft/src/ft_strsplit.c",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/libft/src/ft_get_line.c",
		"/Volumes/Storage/cache/library.hdezier/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/libft/src/ft_lstadd.c",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/libft/Makefile",
		"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/libft/include/libft.h",
		"/Volumes/Storage/cache/library.hdezier/Application Support/Sublime Text 3/Packages/Clang-Complete/cc.sublime-settings",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/test/test1.rl",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/include/specialization.h",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/include/Symbol.hpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/include/Expr.hpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/expertsystem.sublime-project",
		"/Volumes/Storage/cache/library.hdezier/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Volumes/Storage/cache/library.hdezier/Application Support/Sublime Text 3/Packages/CTags/Default.sublime-keymap",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/include/Analyzer.hpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/src/Analyzer.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/include/Rule.hpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/src/Rule.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/src/main.cpp",
		"/nfs/2013/h/hdezier/code/meuh/42/ExpertSystem/hdezier2.0/Makefile",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier2.0/expertsystem.sublime-project",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier2.0/include/Expr.hpp",
		"/home/leeios/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/IToken.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TokensDefinition.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Parser.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/Lexer.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Lexer.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/IExpr.hpp",
		"/home/leeios/.config/sublime-text-3/Packages/Leeios/Leeios.tmLanguage",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/Parser.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/TokensDefinition.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Tokens/TEntity.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Tokens/TOperator.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Tokens/TOperand.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TContextMark.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Tokens/TContextMark.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Tokens/TPriorities.cpp",
		"/home/leeios/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/leeios/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TComment.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Tokens/TComment.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/test/test0.rl",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TPriorities.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Tokens/TNegation.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/specialization.h",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TNegation.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TOperator.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Token/TOperand.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TOperand.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/TEntity.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/main.cpp",
		"/home/leeios/code/meuh/sandbox/hdezier/Parser/src/Parser.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/main.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/Makefile",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/Error.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Error.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/src/Token.cpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/Token.hpp",
		"/home/leeios/code/meuh/sandbox/hdezier/Parser/include/IToken.hpp",
		"/home/leeios/code/meuh/42/ExpertSystem/hdezier/include/Gate.hpp",
		"/home/leeios/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/leeios/.config/sublime-text-3/Packages/Leeios/Symbol.tmPreferences",
		"/home/leeios/.config/sublime-text-3/Packages/Leeios/SymbolHide.tmPreferences",
		"/home/leeios/.config/sublime-text-3/Packages/Open-Include/Default (Linux).sublime-keymap",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/grow_rect_with_piece.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/print_pieces.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/add_piece_to_result.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/lib_rect.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/error.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/test/log.txt",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/test/test_00.p",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/Makefile",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/src/link_pieces.c",
		"/home/leeios/code/meuh/sandbox/hdezier/tetris/tetris.sublime-project"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
			"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src, /nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0/src, *.cpp, *.h",
			"/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0",
			"/nfs/2013/h/hdezier/code/meuh/42/ft_p/hdezier/client, *.c, *.h",
			"~/code/meuh/42/ExpertSystem/hdezier2.0/",
			"/home/leeios/code/meuh/42/ExpertSystem/hdezier2.0/",
			"/home/leeios/code/meuh/42/ExpertSystem/hdezier2.0/include",
			"/home/leeios/code/meuh/42/ExpertSystem/hdezier, *.cpp, *.hpp",
			"/home/leeios/code/meuh/sandbox/hdezier/tetris",
			"/home/leeios/code/meuh/util/roolv2.0",
			"/home/leeios/code/meuh/util/Rool/src,/home/leeios/code/meuh/util/Rool/include",
			"/home/leeios/code/meuh/sandbox/util/Rool",
			"/home/leeios/code/meuh/42/Scop/hdezier/src",
			"/home/leeios/code/meuh/42/scop/hdezier/src",
			"/home/leeios/code/meuh/42/scop/hdezier",
			"/home/leeios/code/meuh/util/project_ruler/test",
			"/home/leeios/taf/Moods/moods/public/js/libs/moods",
			"/home/leeios/taf/whibo-dev/app/",
			"/home/leeios/taf/whibo-dev/app/controllers",
			"/home/leeios/taf/whibo-dev/app/assets/javascripts/zen/app/docViewer/review",
			"/home/leeios/taf/Review/js/libs/etherpad-lite/node_modules/ep_etherpad-lite",
			"/home/leeios/taf/Review/js/libs/etherpad-lite/src",
			"/home/leeios/taf/Review/js/libs/etherpad-lite/SRC",
			"/home/leeios/taf/Review/js/libs/etherpad-lite",
			"/home/leeios/taf/Review",
			"/home/leeios/taf/tmp_taf/public/js/libs/feedy",
			"/home/leeios/taf/tmp_taf/",
			"/home/leeios/taf/tmp_taf/public/js/libs/feedy",
			"/home/leeios/taf/tmp_taf/public/js/libs/comApp",
			"/home/leeios/taf/tmp_taf/model",
			"/home/leeios/taf/tmp_taf/public/js/libs/comApp",
			"/home/leeios/taf/tmp_taf/public/js/libs/appComments",
			"/home/leeios/taf/tmp_taf/public/js/libs/appcomments",
			"/home/leeios/taf/tmp_taf/public/js/libs/appcoments",
			"/home/leeios/taf/tmp_taf/public/js/libs",
			"/home/leeios/code/C/grimly/include,/home/leeios/code/C/grimly/src,/home/leeios/code/C/grimly/test"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"_isValid",
			"255",
			"minmaxData",
			"sMinMaxData",
			"countAlign",
			"maxValue",
			"value",
			"sMinMaxResult",
			"i",
			"\n",
			"int",
			"uint8_t",
			"countAlignSide",
			"int",
			"case",
			"x",
			"isValid",
			"m_turn",
			"input",
			"x",
			"m_board",
			"int",
			"i",
			"<",
			"setStroke",
			"GameManager",
			"cola",
			"9",
			"LARGE",
			"19",
			"g",
			"Player",
			"unsigned int",
			"Error receiv",
			"Error",
			"Error receiving",
			"class",
			"title",
			"href=\"#\"",
			"class=\"fa",
			"=\"fa",
			"fa",
			"annImg-container",
			"canvas",
			"div",
			"annotateImg",
			"valid_img",
			"href=\"#\"",
			"validable-img",
			"valid_img",
			"img id",
			"straight",
			"attr",
			"class=\"thumbnail",
			"Thumbnail",
			"thumbnail",
			"smile",
			"Notification",
			"post-title",
			"row-fluid",
			"  ",
			"label",
			"p class=\"list-group-item-text\">",
			"<p ",
			"p",
			"</h4>",
			"list-group-item\"",
			"list-group-item",
			" <",
			"http://lorempixel.com/output/",
			"page",
			"Page",
			",",
			"id=\"screen",
			"Page",
			"firstPage",
			"ms-container",
			"position",
			"absolute",
			" <",
			"  ",
			" ",
			"69px",
			"  ",
			"free",
			"ret_free",
			"super+l",
			"ctrl",
			"shift+up",
			":",
			"create_server",
			"new",
			"super+g",
			"ctrl+g",
			"(",
			"objs",
			"incs",
			"srcs",
			"ctrl",
			"m_initValues",
			"initVals",
			"initValues",
			"return (eValue::FALSE);",
			"return (eValue::TRUE)",
			"return (eValue::ERROR);",
			"return (eValue::UNDEFINED);",
			"UNDEFINED",
			"==",
			"left",
			"oppos",
			"Symbol",
			"Symbol(val,",
			"opposite",
			"true",
			"false",
			"rightVal",
			"result =",
			"leftVal",
			"m_rightOp",
			"val",
			"tv",
			"rightEval",
			"leftEval",
			"Symbol",
			"symbols",
			"m_rightExpr",
			"leftVal",
			"const"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"ERR_VAL",
			"m_initStates",
			"initStates",
			"SYMBOL",
			"sSymbol",
			"t_error",
			"nullptr",
			"userInput",
			"scop",
			"suggestComment",
			"preValid",
			"addComment",
			"id",
			"r.Seed.",
			"ViewFile",
			"grimly"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2896,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Makefile Improved/Makefile Improved.tmLanguage"
						},
						"translation.x": -0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/GameManager.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4044,
						"regions":
						{
						},
						"selection":
						[
							[
								2340,
								2340
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 175.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Player.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4069,
						"regions":
						{
						},
						"selection":
						[
							[
								2537,
								2537
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 520.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Rules.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3525,
						"regions":
						{
						},
						"selection":
						[
							[
								2467,
								2467
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 475.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "include/Player.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1916,
						"regions":
						{
						},
						"selection":
						[
							[
								1362,
								1362
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 249.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "include/Board.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6076,
						"regions":
						{
						},
						"selection":
						[
							[
								4454,
								4454
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1785.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "include/Rules.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2013,
						"regions":
						{
						},
						"selection":
						[
							[
								1507,
								1507
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 129.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "include/common.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1907,
						"regions":
						{
						},
						"selection":
						[
							[
								1148,
								1148
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "include/GameManager.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1523,
						"regions":
						{
						},
						"selection":
						[
							[
								940,
								940
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "include/gomoku.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 935,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 10,
					"file": "src/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1647,
						"regions":
						{
						},
						"selection":
						[
							[
								1215,
								1215
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/Leeios/Leeios.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Rules.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3525,
						"regions":
						{
						},
						"selection":
						[
							[
								2688,
								2752
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 908.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Player.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4069,
						"regions":
						{
						},
						"selection":
						[
							[
								668,
								668
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Leeios/Leeios.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"auto_name": "1/2",
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"default_dir": "/nfs/2013/h/hdezier/code/meuh/42/Gomoku/hdezier-erobert2.0",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "include/common.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1907,
						"regions":
						{
						},
						"selection":
						[
							[
								1341,
								1341
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Objective-C/Objective-C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 458.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 63.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.cc":
	{
		"height": 98.0
	},
	"output.clipboard_manager":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "gomoku.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rulh",
				"include/Rules.h"
			],
			[
				"playcp",
				"src/Player.cpp"
			],
			[
				"rulcp",
				"src/Rules.cpp"
			],
			[
				"gamm",
				"include/GameManager.h"
			],
			[
				"bocp",
				"src/Board.cpp"
			],
			[
				"boar",
				"include/Board.h"
			],
			[
				"rules",
				"include/Rules.h"
			],
			[
				"boa",
				"include/Board.h"
			],
			[
				"pla",
				"src/Player.cpp"
			],
			[
				"a",
				"include/AINode.h"
			],
			[
				"ain",
				"src/AINode.cpp"
			],
			[
				"play",
				"src/Player.cpp"
			],
			[
				"com",
				"include/common.h"
			],
			[
				"bo",
				"include/Board.h"
			],
			[
				"rul",
				"src/Rules.cpp"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"rule",
				"src/Rules.cpp"
			],
			[
				"testm",
				"util/test.map"
			],
			[
				"testin",
				"util/test.input"
			],
			[
				"make",
				"Makefile"
			],
			[
				"makef",
				"Makefile"
			],
			[
				"c",
				"include/common.h"
			],
			[
				"playh",
				"include/Player.h"
			],
			[
				"boarcp",
				"src/Board.cpp"
			],
			[
				"boarh",
				"include/Board.h"
			],
			[
				"placpp",
				"src/Player.cpp"
			],
			[
				"ru",
				"include/Rules.h"
			],
			[
				"gammh",
				"include/GameManager.h"
			],
			[
				"gam",
				"include/GameManager.h"
			],
			[
				"gomo",
				"gomoku.sublime-project"
			],
			[
				"rulc",
				"src/Rules.cpp"
			],
			[
				"sub",
				"gomoku.sublime-project"
			],
			[
				"mai",
				"src/main.cpp"
			],
			[
				"gamem",
				"src/GameManager.cpp"
			],
			[
				"re",
				"src/read_prompt.c"
			],
			[
				"main",
				"src/main.c"
			],
			[
				"cli",
				"src/client.c"
			],
			[
				"log",
				"log.txt"
			],
			[
				"sendf",
				"libft/src/send_files.c"
			],
			[
				"readf",
				"libft/src/read_files.c"
			],
			[
				"send",
				"libft/src/send_files.c"
			],
			[
				"readd",
				"libft/src/read_data.c"
			],
			[
				"clih",
				"include/client.h"
			],
			[
				"conta",
				"contact.html"
			],
			[
				"notif",
				"notifications.html"
			],
			[
				"sket",
				"js/lib/sketch.min.js"
			],
			[
				"in",
				"index.html"
			],
			[
				"mul",
				"js/lib/MultiScreen.js"
			],
			[
				"font",
				"css/font-awesome.min.css"
			],
			[
				"incs",
				"css/index.css"
			],
			[
				"ini",
				"src/init_client.c"
			],
			[
				"ex",
				"src/exec_cmd.c"
			],
			[
				"libfh",
				"libft/include/libft.h"
			],
			[
				"freea",
				"libft/src/ft_free_array_str.c"
			],
			[
				"spli",
				"libft/src/ft_strsplit.c"
			],
			[
				"getne",
				"libft/src/ft_get_line.c"
			],
			[
				"lst",
				"libft/src/ft_lstadd.c"
			],
			[
				"fus",
				"ft_p.sublime-project"
			],
			[
				"atoi",
				"libft/src/ft_atoi.c"
			],
			[
				"libfth",
				"libft/include/libft.h"
			],
			[
				".h",
				"include/server.h"
			],
			[
				"test1",
				"test/test1.rl"
			],
			[
				"symb",
				"include/Symbol.hpp"
			],
			[
				"anah",
				"include/Analyzer.hpp"
			],
			[
				"te",
				"test/test0.rl"
			],
			[
				"ana",
				"include/Analyzer.hpp"
			],
			[
				"rulhp",
				"include/Rule.hpp"
			],
			[
				"rulecp",
				"src/Rule.cpp"
			],
			[
				"expr",
				"include/Expr.hpp"
			],
			[
				"exp",
				"expertsystem.sublime-project"
			],
			[
				"subl",
				"expertsystem.sublime-project"
			],
			[
				"exphpp",
				"include/Expr.hpp"
			],
			[
				"er",
				"include/Error.hpp"
			],
			[
				"e",
				"include/Expr.hpp"
			],
			[
				"lexh",
				"include/Lexer.hpp"
			],
			[
				"lex",
				"src/Lexer.cpp"
			],
			[
				"itok",
				"include/IToken.hpp"
			],
			[
				"ie",
				"include/IExpr.hpp"
			],
			[
				"iex",
				"include/IExpr.hpp"
			],
			[
				"spe",
				"include/specialization.h"
			],
			[
				"lexc",
				"src/Lexer.cpp"
			],
			[
				"le",
				"include/Lexer.hpp"
			],
			[
				"err",
				"src/Error.cpp"
			],
			[
				"pars",
				"include/Parser.hpp"
			],
			[
				"ito",
				"include/IToken.hpp"
			],
			[
				"toper",
				"src/Tokens/TOperator.cpp"
			],
			[
				"top",
				"src/Tokens/TOperand.cpp"
			],
			[
				"tentcp",
				"src/Tokens/TEntity.cpp"
			],
			[
				"tcontecp",
				"src/Tokens/TContextMark.cpp"
			],
			[
				"tconte",
				"include/TContextMark.hpp"
			],
			[
				"t",
				"include/TComment.hpp"
			],
			[
				"token",
				"include/TokensDefinition.hpp"
			],
			[
				"toke",
				"include/Token.hpp"
			],
			[
				"makefi",
				"Makefile"
			],
			[
				"tneg",
				"src/Tokens/TNegation.cpp"
			],
			[
				"tnega",
				"include/TNegation.hpp"
			],
			[
				"topera",
				"src/Token/TOperand.cpp"
			],
			[
				"tprio",
				"src/Tokens/TPriorities.cpp"
			],
			[
				"tpio",
				"include/TPriorities.hpp"
			],
			[
				"test",
				"test/test0.rl"
			],
			[
				"tcon",
				"src/Tokens/TContextMark.cpp"
			],
			[
				"par",
				"include/Parser.hpp"
			],
			[
				"tcpp",
				"src/Tokens/TEntity.cpp"
			],
			[
				"tope",
				"include/TOperator.hpp"
			],
			[
				"tco",
				"include/TComment.hpp"
			],
			[
				"ten",
				"include/TEntity.hpp"
			],
			[
				"te0",
				"test/test0.rl"
			],
			[
				"tcom",
				"src/Tokens/TComment.cpp"
			],
			[
				"tenti",
				"src/Tokens/TEntity.cpp"
			],
			[
				"tcomm",
				"include/TComment.hpp"
			],
			[
				"tokencp",
				"src/Token.cpp"
			],
			[
				"gate",
				"include/Gate.hpp"
			],
			[
				"erro",
				"src/Error.cpp"
			],
			[
				"error",
				"include/Error.hpp"
			],
			[
				"dead",
				"src/calculus_dead_blocks.c"
			],
			[
				"pri",
				"src/print_pieces.c"
			],
			[
				"fill",
				"src/fill_result_in_size.c"
			],
			[
				"res",
				"src/resolve.c"
			],
			[
				"ma",
				"Makefile"
			],
			[
				"lo",
				"test/log.txt"
			],
			[
				"rec",
				"src/lib_rect.c"
			],
			[
				"calc",
				"src/calc_added_rows_cols.c"
			],
			[
				".p",
				"test/test_00.p"
			],
			[
				"libr",
				"src/lib_rect.c"
			],
			[
				"logt",
				"test/log.txt"
			],
			[
				"add",
				"src/add_piece_to_result.c"
			],
			[
				"link",
				"src/link_pieces.c"
			],
			[
				"prin",
				"src/print_pieces.c"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/code/meuh/42/Gomoku/hdezier-erobert/gomoku.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 245.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
